
estructura Recursividad{
	entero factorial;
	entero fibonacci;
	entero ackerman;
	decimal potencia;
}

Recursividad valores_recursivos;

vacio pruebas_recursivas(){
	
	valores_recursivos.factorial = factorial(6);
	valores_recursivos.fibonacci = fibonacci(6);
	valores_recursivos.ackerman = ackermann(3,4);
	valores_recursivos.potencia = Potencia(4.0,2);
}


entero factorial(entero numero) {
    si (numero == 0) {
        retornar 1;
    } sino {
        retornar numero * factorial(numero - 1);
    }
}

entero fibonacci(entero n){

    si(n == 0){
        retornar 0;
    }sino si(n == 1){
        retornar 1;
    }sino{
        retornar fibonacci(n - 1) + fibonacci(n - 2);
    }
}

entero ackermann(entero m,entero n){
	si(m == 0){
		retornar (n + 1);
	}sino si(m > 0 && n == 0){
		retornar ackermann(m - 1, 1);
	}sino{
		retornar ackermann(m - 1, ackermann(m, n - 1));
	}
}

decimal Potencia(decimal base,entero exp){
	si(exp == 0){        
		retornar 1;
	}sino{
		si(exp == 1){     
		   retornar base;
		}sino{
			retornar base * Potencia(base,exp-1);
		}
	}
}

