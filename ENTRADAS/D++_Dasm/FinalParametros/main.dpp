//importar("recursivos.dpp");
vacio principal()
{
	booleano bandera = verdadero;
	decimal valor = 23.4;
	entero a = 30;
	entero b = 40;
	entero c = 10;
	entero resultado = num(a,num1(b,a),num1(a, num(1,2,3)));// RESULTADO 64...
	imprimir(resultado);
	imprimirResultados(factorial(5), fibo(10), akerman(3,4));
	/*
		factorial = 120
		fibo = 55
		akerman = 125
	*/
}

entero num(entero n, entero m, entero c)
{
	retornar n + m + c;
}

entero num1(entero n, entero m)
{
	retornar n-m;
}


vacio imprimirResultados(entero fact, entero fibo, entero akerman)
{
	imprimir(fact);
	imprimir(fibo);
	imprimir(akerman);
}

entero akerman(entero m, entero n)
{
      si(m == 0)
      {
            retornar (n + 1);
      }
      sino si(m > 0 && n == 0)
      {
            retornar akerman(m - 1, 1);
      }
      sino
      {
            
            retornar akerman(m -1, akerman(m, n-1));
      }
}

entero fibo(entero n)
{
      si(n == 0 || n == 1)
      {
            retornar n;
      }
      sino
      {
            retornar fibo(n-1) + fibo(n -2);
      }
}


entero factorial(entero n)
{
      si(n == 0)
      {
            retornar 1;
      }
      sino
      {
            retornar (n * factorial(n-1));
      }
}
