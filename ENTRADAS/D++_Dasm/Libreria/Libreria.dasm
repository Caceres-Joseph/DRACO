 /*
|-------------------------------------------------
| Convertir entero a  cadena
|-------------------------------------------------
| FUNCION AUXILIAR PARA LLENAR POSICIONES DEL HEAP
| PARAM 1: NUMERO DE ELEMENTOS A LLENAR EN EL HEAP
*/

Function $DASM_LLENANDO 
  get_local 0
  1
  ADD
  0
  set_local $calc 
  set_local $calc 
  get_local 0
  2
  ADD
  0
  set_local $calc 
  $CONDICION
  get_local 0
  2
  ADD
  get_local $calc 
  get_local 0
  1
  ADD
  get_local $calc 
  LT 
  BR_IF $SALIR 
    get_global 0
    0
    set_global $calc  
    get_global 0
    1
    ADD
    set_global 0 
    get_local 0
    2
    ADD 
    get_local 0
    2
    ADD
    get_local $calc 
    1 
    ADD 
    set_local $calc 
    BR $CONDICION
  $SALIR
End


/*
|-------------------------------------------------
| Convertir entero a  cadena
|-------------------------------------------------
| FUNCION AUXILIAR PARA CALCULAR POSICIONES QUE SE DEBEN DE LLENAR
| PARAM 1: PUNTERO DONDE INICIA EL ARREGLO
| PARAM 2: NUMERO DE DIMENSIONES
*/

Function $DASM_CALC_CANT  
    get_local 0
    1
    ADD
    0
    set_local $calc 
    get_local 0
    2
    ADD
    0
    set_local $calc 
    set_local $calc
    set_local $calc 
    get_local 0
    3
    ADD
    1
    set_local $calc 
    get_local 0
    4
    ADD
    0
    set_local $calc 
    $CONDICION

    get_local 0
    4
    ADD
    get_local $calc

    get_local 0
    2
    ADD
    get_local $calc

    LT

    BR_IF $SALIDA 
    get_local 0
    3
    ADD 
    get_local 0
    3
    ADD
    get_local $calc 
    get_local 0
    1
    ADD
    get_local $calc 
    get_global $calc  
    MULT  
    set_local $calc 
    get_local 0
    1
    ADD 
    get_local 0
    1
    ADD
    get_local $calc 
    1 
    ADD 
    set_local $calc 
    get_local 0
    4
    ADD 
    get_local 0
    4
    ADD
    get_local $calc 
    1 
    ADD 
    set_local $calc 
    BR $CONDICION 
    $SALIDA
    get_local 0
    3
    ADD
    get_local $calc 
    set_local $ret  
End

/*
|-------------------------------------------------
| Convertir entero a  cadena
|-------------------------------------------------
| FUNCION QUE CONVERTIRA UN NUMERO ENTERO A STRING
| PARAM 1: NUMERO ENTERO A CONVERTIR
*/


Function $DASM_ENTERO_A_CADENA
    get_local 0
    1
    ADD
    0
    set_local $calc
    set_local $calc 
    get_local 0
    2
    ADD
    0
    set_local $calc get_local 0
    3
    ADD
    1
    set_local $calc 
    get_local 0
    4
    ADD
    0
    set_local $calc 
    $INICIO
    get_local 0
    1
    ADD
    get_local $calc  
    10
    GT  
    BR_IF $TERMINAR 
    get_local 0
    2
    ADD
    get_local 0
    1
    ADD
    get_local $calc
    10
    MOD
    set_local $calc 
    get_local 0
    3
    ADD
    get_local 0
    3
    ADD
    get_local $calc
    1
    ADD
    set_local $calc
    get_local 0
    1
    ADD 
    get_local 0
    1
    ADD
    get_local $calc 
    get_local 0
    2
    ADD
    get_local $calc 
    DIFF
    set_local $calc 
    get_local 0
    1
    ADD
    get_local 0
    1
    ADD
    get_local $calc
    10
    DIV
    set_local $calc
    get_local 0
    2
    ADD
    get_local 0
    2
    ADD
    get_local $calc
    48
    ADD 
    BR $INICIO 
    $TERMINAR
    get_local 0
    2
    ADD
    get_local 0
    1
    ADD
    get_local $calc 
    48
    ADD
    get_local 0
    5
    ADD
    get_global 0
    set_local $calc 
    $SIGUIENTE 
    get_local 0
    3
    ADD
    get_local $calc 
    get_local 0
    4
    ADD
    get_local $calc 
    DIFF  
    BR_IF $SALIR  
    set_local $calc   
    get_global 0 
    get_local 0
    2
    ADD
    get_local $calc  
    set_global $calc  
    get_global 0
    1
    ADD
    set_global 0
    get_local 0
    4
    ADD
    get_local 0
    4
    ADD
    get_local $calc
    1
    ADD
    set_local $calc
    BR $SIGUIENTE
    $SALIR
    get_global 0
    0
    set_global $calc
    get_global 0
    1
    ADD
    set_global 0
    get_local 0
    5
    ADD
    get_local $calc
    set_local $ret  
End



/*
|-------------------------------------------------
| Convertir decimal a  cadenas
|-------------------------------------------------
| FUNCION QUE CONVERTIRA EL NUMERO DECIMAL DADO A CADENA PARA PODER MOSTRARLO E IMPRIMIRLO
| PARAM 1: NUMERO DECIMAL A CONVERTIR
*/
Function $DASM_DECIMAL_A_CADENA 
	get_local 0
	1
	ADD
	0
	set_local $calc 
	set_local $calc 
	get_local 0
	2
	ADD 
	get_local 0
	1
	ADD
	get_local $calc 
	get_local 0
	1
	ADD
	get_local $calc 
	1 
	MOD 
	DIFF 
	set_local $calc 
	get_local 0
	3
	ADD 
	get_local 0
	1
	ADD
	get_local $calc 
	1 
	MOD 
	100 
	MULT 
	set_local $calc 
	get_local 0 
	4 
	ADD  
	get_local 0  
	3 
	ADD  
	1  
	ADD 
	get_local 0 
	3 
	ADD  
	1  
	ADD 
	get_local 0 
	3 
	ADD  
	1  
	ADD  
	get_local 0  
	2  
	ADD  
	get_local $calc 
    get_local 0  
	3 
	ADD  
	set_local 0  
	Call $DASM_ENTERO_A_CADENA 
	get_local 0 
	3 
	DIFF 
	set_local 0  
	get_local $ret 
	get_local 0 
	3 
	ADD  
	2 
	ADD  
	get_global 0 
	get_global 0  
	46 
	set_global $calc  
	get_global 0  
	1  
	ADD  
	set_global 0 
	get_global 0 
	0 
	set_global $calc  
	get_global 0  
	1  
	ADD  
	set_global 0  
	get_local 0  
	3  
	ADD  
	set_local 0 
	Call $DASM_CONCATENAR_CADENAS 
	get_local 0  
	3  
	DIFF  
	set_local 0  
	get_local $ret  
	get_local 0 
	3
	ADD 
	2 
	ADD 
	get_local 0  
	3 
	ADD  
	1  
	ADD 
	get_local 0  
	3  
	ADD  
	get_local $calc
    get_local 0 
	3 
	ADD  
	set_local 0  
	Call $DASM_ENTERO_A_CADENA 
	get_local 0  
	3  
	DIFF  
	set_local 0  
	get_local $ret  
	get_local 0  
	3  
	ADD 
	set_local 0  
	Call $DASM_CONCATENAR_CADENAS 
	get_local 0  
	3 
	DIFF 
	set_local 0  
	get_local $ret 
	set_local $calc  
	get_local 0  
	4 
	ADD  
	get_local $calc 
	set_local $ret  
End


/*
|-------------------------------------------------
| Comparando cadenas
|-------------------------------------------------
| FUNCION ENCARGADA DE TRAER LA COMPARACION ENTRE CADENAS 
| PARAM 1: PUNTERO DE LA CADENA 1
| PARAM 2: PUNTERO DE LA CADENA 2
*/

Function $DASM_COMPARAR_CADENAS 
    get_local 0
    1
    ADD
    0
    set_local $calc 
    get_local 0
    2
    ADD
    0
    set_local $calc 
    set_local $calc
    set_local $calc 
    get_local 0
    3
    ADD
    0
    set_local $calc 
    get_local 0
    4
    ADD
    0
    set_local $calc  
    get_local 0
    3
    ADD  
    get_local 0
    4
    ADD
    1
    ADD              

    get_local 0
    1
    ADD
    get_local $calc  
    get_local 0
    4
    ADD
    set_local 0
    Call $DASM_SUMA_CADENA
    get_local 0
    4
    DIFF
    set_local 0
    get_local $ret  
    set_local $calc 
    get_local 0
    4
    ADD  
    get_local 0
    4
    ADD
    1
    ADD   

    get_local 0
    2
    ADD 
    get_local $calc   
    get_local 0
    4
    ADD
    set_local 0
    Call $DASM_SUMA_CADENA
    get_local 0
    4
    DIFF
    set_local 0
    get_local $ret 
    set_local $calc 
    get_local 0
    3
    ADD
    get_local $calc  

    get_local 0
    4
    ADD
    get_local $calc  

    DIFF

    EQZ  
    BR_IF $MAYOR
    0
    set_local $ret 
    BR $e_retornar

    $MAYOR
    get_local 0
    3
    ADD
    get_local $calc  

    get_local 0
    4
    ADD
    get_local $calc  

    GT

    BR_IF $MENOR
    1
    set_local $ret
    BR $e_retornar

    $MENOR
    2
    set_local $ret

    $e_retornar

End


/*
|-------------------------------------------------
| Igualacion cadenas
|-------------------------------------------------
| FUNCION QUE HACE EL IGUAL EN CADENAS
| PARAM 1: PUNTERO CADENA 1
| PARAM 2: PUNTERO CADENA 2
*/
 
Function $DASM_IGUALACION_CADENAS 
    get_local 0
    1
    ADD
    0
    set_local $calc 
    get_local 0
    2
    ADD
    0
    set_local $calc 
    set_local $calc
    set_local $calc 
    get_local 0
    3
    ADD  
    get_local 0
    2
    ADD
    1
    ADD

    get_local 0
    1
    ADD
    get_local $calc

    get_local 0
    2
    ADD
    2
    ADD

    get_local 0
    2
    ADD
    get_local $calc 
    get_local 0
    2
    ADD
    set_local 0
    Call $DASM_COMPARAR_CADENAS
    get_local 0
    2
    DIFF
    set_local 0

    get_local $ret 
    set_local $calc  
    get_local 0
    3
    ADD
    get_local $calc

    BR_IF $ES_IGUAL
    0
    set_local $ret
    BR $e_retornar
    $ES_IGUAL
    1
    set_local $ret
    $e_retornar
End

/*
|-------------------------------------------------
| Igualacion cadenas
|-------------------------------------------------
| FUNCION AUXILIAR QUE HARA LA SUMA DE UNA CADENA DADA RETORNARA EL TOTAL DE LA SUMA
| PARAM 1: PUNTERO DE LA CADENA
*/

Function $DASM_SUMA_CADENA
    get_local 0
    1
    ADD
    0
    set_local $calc 
    set_local $calc 
    get_local 0
    2
    ADD 
    0
    set_local $calc 
    get_local 0
    1
    ADD
    get_local $calc     

    BR_IF $TERMINAR      
    $INICIO 
    get_local 0
    1
    ADD
    get_local $calc
    get_global $calc  
    BR_IF $TERMINAR  
    get_local 0
    2
    ADD  

    get_local 0
    2
    ADD
    get_local $calc  

    get_local 0
    1
    ADD
    get_local $calc
    get_global $calc  

    ADD  

    set_local $calc  
    get_local 0
    1
    ADD

    get_local 0
    1
    ADD
    get_local $calc

    1

    ADD

    set_local $calc 
    BR $INICIO
    $TERMINAR 
    get_local 0
    2
    ADD
    get_local $calc  

    set_local $ret 
End


/*
|-------------------------------------------------
| Mayor que cadenas
|-------------------------------------------------
| FUNCION QUE ESTABLECE SI ES MAYOR
| PARAM 1: PUNTERO CADENA 1
| PARAM 2: PUNTERO CADENA 2
*/
 
Function $DASM_MAYOR_CADENA 
    get_local 0
    1
    ADD
    0
    set_local $calc 
    get_local 0
    2
    ADD
    0
    set_local $calc 
    set_local $calc
    set_local $calc 
    get_local 0
    3
    ADD  
    get_local 0
    2
    ADD
    1
    ADD

    get_local 0
    1
    ADD
    get_local $calc

    get_local 0
    2
    ADD
    2
    ADD

    get_local 0
    2
    ADD
    get_local $calc 
    get_local 0
    2
    ADD
    set_local 0
    Call $DASM_COMPARAR_CADENAS
    get_local 0
    2
    DIFF
    set_local 0 
    get_local $ret 
    set_local $calc  
    get_local 0
    3
    ADD
    get_local $calc 
    1 
    DIFF 
    EQZ 
    BR_IF $NO_MAYOR
    1
    set_local $ret
    BR $e_retornar
    $NO_MAYOR
    0
    set_local $ret
    $e_retornar
End


/*
|-------------------------------------------------
| Imprimiendo cadena
|------------------------------------------------- 
| PARAM 1: PUNTERO CADENA 1 
*/
Function $DASM_IMPRIMIR_CADENA 
    get_local 0
    1
    ADD
    0
    set_local $calc
    set_local $calc  
    "%c"
    //\n
    10 
    PRINT
 
 
    get_local 0
    1
    ADD
    get_local $calc 

    BR_IF $NULO  

    $INICIO
    get_local 0
    1
    ADD
    get_local $calc  
    get_global $calc  
    BR_IF $SALIR  
    "%c"     
    get_local 0
    1
    ADD
    get_local $calc  

    get_global $calc  

    PRINT  
    get_local 0
    1
    ADD

    get_local 0
    1
    ADD
    get_local $calc 
    1
    ADD
    set_local $calc 
    BR $INICIO 
    $NULO
    "%c"
    //N
    78 
    PRINT
    //U
    "%c"
    85 
    PRINT
    //L
    "%c"
    76 
    PRINT
    //O
    "%c"
    79 
    PRINT

    $SALIR 

End
/*
|-------------------------------------------------
| Imprimiendo nulo en consola
|-------------------------------------------------
*/
Function $DASM_IMPRIMIR_NULO
	//Imprimiendo caracter
	"%c" 
	10.0 
	PRINT  
	"%c" 
	110.0 
	PRINT  
	"%c" 
	117.0 
	PRINT  
	"%c" 
	108.0 
	PRINT  
	"%c" 
	111.0 
	PRINT 
	$dasm_retora
END
/*
|-------------------------------------------------
| Imprimiendo object en consola
|-------------------------------------------------
*/
Function $DASM_IMPRIMIR_OBJECT 
	"%c" 
	10.0 
	PRINT  
	"%c" 
	111.0 
	PRINT 
	"%c" 
	98.0 
	PRINT 
	"%c" 
	106.0 
	PRINT 
	"%c" 
	101.0 
	PRINT 
	"%c" 
	99.0 
	PRINT 
	"%c" 
	116.0 
	PRINT
	$dasm_retora
END


/*
|-------------------------------------------------
| Concatena cadenas
|-------------------------------------------------
| CONCATENAR STRING UTILIZANDO DOS PUNTEROS Y EL PUNTERO LIBRE DEL HEAP:
| PARAM 1: PUNTERO STRING 1
| PARAM 2: PUNTERO STRING 2
| RETORNAR EL PUNTERO DE LA CADENA RESULTANTE
*/
 

Function $DASM_CONCATENAR_CADENAS
    get_local 0
    1
    ADD
    0
    set_local $calc
    get_local 0
    2
    ADD
    0
    set_local $calc
    set_local $calc 
    set_local $calc 
    get_global 0 
    $CADENA1
    get_local 0 
    1  
    ADD 
    get_local $calc
    get_global $calc 

    BR_IF $CADENA2 

    get_global 0 
    get_local 0
    1
    ADD 
    get_local $calc 
    get_global $calc 
    set_global $calc 
    get_global 0
    1
    ADD
    set_global 0
    get_local 0
    1
    ADD
    get_local 0
    1
    ADD
    get_local $calc
    1
    ADD
    set_local $calc
    BR $CADENA1

    $CADENA2
    get_local 0
    2   
    ADD  
    get_local $calc 
    get_global $calc

    BR_IF $FIN_CONCAT 

    get_global 0 
    get_local 0 
    2
    ADD
    get_local $calc 
    get_global $calc 
    set_global $calc 
    get_global 0
    1
    ADD
    set_global 0
    get_local 0
    2
    ADD
    get_local 0
    2
    ADD
    get_local $calc
    1
    ADD
    set_local $calc
    BR $CADENA2
    $FIN_CONCAT
    get_global 0 
    0 
    set_global $calc 
    get_global 0
    1
    ADD
    set_global 0 
    set_local $ret

End

